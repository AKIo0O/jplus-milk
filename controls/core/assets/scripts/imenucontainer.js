/** * @author xuld */imports("Controls.Core.IMenuContainer");using("System.Dom.Align");/** * 所有支持下拉菜单的组件实现的接口。 */var IMenuContainer = {		/**	 * 获取当前控件的下拉菜单。	 * @type Control	 * @property menu	 */		menuWidth: 'auto',		onMenuOpen: function(){		this.trigger('menuopen');	},		onMenuClose: function(){		this.trigger('menuclose');	},	setMenu: function(control){				control = control instanceof Dom ? control : Dom.get(control);				// 设置下拉菜单。		this.menu = control.addClass('x-dropdownmenu').hide();				// 如果当前节点已经添加到 DOM 树，则同时添加 control 。		if(!control.parent('body')){						var tagName = this.node.tagName;						// 给 div 和 span 更多关心。			if(tagName === 'DIV' || tagName === 'SPAN'){				Dom.movable(this.node);				control.appendTo(this);			} else {				control.appendTo(this.parent());			}						if(navigator.isQuirks && control.parent().getStyle('z-index') === 0)				control.parent().setStyle('z-index', 1);		}				return this;	},		realignMenu: function (offsetX, offsetY) {		this.menu.align(this, 'bl', offsetX, offsetY);		return this;	},		toggleMenu: function(e){		if(e) this._menuTrigger = e.target;		return this._menuVisible ? this.hideMenu() : this.showMenu();	},		showMenu: function(){				if(this._menuVisible){			this.realignMenu(0, -1);			return this;			}				this._menuVisible = true;		this.menu.show();		this.realignMenu(0, -1);				var size = this.menuWidth;		if(size === 'auto') {			size = this.getSize().x;			if(size < Dom.styleNumber(this.menu.node, 'min-width'))				size = -1;		}				if(size !== -1) {			this.menu.setSize(size);		}				this.onMenuOpen();				document.on('mouseup', this.menuMouseUpHandler = this.hideMenu.bind(this));				return this;	},		hideMenu: function (e) {				// 如果是来自事件的关闭，则检测是否需要关闭菜单。		if(e){			e = e.target;			if([this._menuTrigger, this.menu.node, this.node].indexOf(e) >= 0 || Dom.hasChild(this.menu.node, e) || Dom.hasChild(this.node, e)) 				return this;		}				this.onMenuClose();		this.menu.hide();		document.un('mouseup', this.menuMouseUpHandler);				this._menuVisible = false;				return this;	}	};